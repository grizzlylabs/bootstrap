#!/bin/bash
#############
#
# Get any variables
#
# Inspect bootstrap.cfg before you execute this script
#
source ./bootstrap.cfg
#
############## seed.manifests
#
clear
printf "\n"
printf "This script creates the puppet manifest files\n"
printf "             1. to manage this deployment box\n"
printf "             2. To rebuild this box or create another\n"
printf "             3. To provide a framework for your entire deployment\n" 
printf "\n"
printf "\n"

read -p "### Press [Enter] key to continue ###"
clear

#
#############
#
printf "\n"
printf "Modify Puppet config file\n"
printf "\n"
printf "Set the environmentpath\n"
printf "\n"

# puppet wants the following line in puppet.conf
# environmentpath = $confdir/environments
# It should be in [main]

# We will add three lines from bottom to top
#
# #Puppets Environment Path
# environmentpath = $confdir/environments
# {a blank line}

# Set up Environments
if  ! grep -q 'environmentpath' "$PUPPET_ROOT"/puppet.conf 
then
   printf "Modifing puppet.conf\n"
   printf "\n"
   sudo sed -i 's/\[main\]/&\n /' "$PUPPET_ROOT"/puppet.conf
   sudo sed -i 's/\[main\]/&\n    environmentpath = $confdir\/environments/' "$PUPPET_ROOT"/puppet.conf
   sudo sed -i 's/\[main\]/&\n    \# Puppet Environment Path /' "$PUPPET_ROOT"/puppet.conf
   sudo sed -i 's/\[main\]/&\n /' "$PUPPET_ROOT"/puppet.conf
fi

printf "Added Environment Path\n"

# make sure puppet can see hiera

if ! grep -q 'hiera_config' "$PUPPET_ROOT"/puppet.conf
then
   printf "No heira_config -- Making it\n"
   printf "\n"
   printf "hiera_config = /etc/hiera.yaml\n"
   printf "\n"
   sudo sed -i 's/\[main\]/&\n /' "$PUPPET_ROOT"/puppet.conf
   sudo sed -i 's/\[main\]/&\n    hiera_config = \/etc\/hiera.yaml/' "$PUPPET_ROOT"/puppet.conf
   sudo sed -i 's/\[main\]/&\n    \# Hiera Path/' "$PUPPET_ROOT"/puppet.conf
   sudo sed -i 's/\[main\]/&\n /' "$PUPPET_ROOT"/puppet.conf
fi

printf "\n"
read -p "### Press [Enter] key to continue ###"
clear

#############
#

# manage hiera here
printf "\n" 
printf "Configuring hiera\n"
printf "\n" 

# creating the hiera data directorys
sudo mkdir -p             "$PUPPET_ROOT"/hieradata
sudo mkdir -p             "$PUPPET_ROOT"/hieradata/nodes
sudo mkdir -p             "$PUPPET_ROOT"/hieradata/roles
sudo mkdir -p             "$PUPPET_ROOT"/hieradata/secrets
sudo mkdir -p             "$PUPPET_ROOT"/hieradata/common 

sudo chown -R root:puppet "$PUPPET_ROOT"/hieradata
sudo chmod -R 770         "$PUPPET_ROOT"/hieradata
sudo chmod -R g+s         "$PUPPET_ROOT"/hieradata

if [ ! -L ""$PUPPET_ROOT"/hiera.yaml" ]
then
   printf "Link to /etc/hiera.yaml does not exist. Linking now\n"
   printf "\n"
   sudo ln -s /etc/hiera.yaml "$PUPPET_ROOT"/hiera.yaml
else
   printf "That is good link to hiera.yaml exists\n"
fi

# manage hiera.yaml 

if ! grep -q ":datadir: "$PUPPET_ROOT"/hieradata" /etc/hiera.yaml 
then
   printf "There is no data path for Hiera... Re-writing hiera.yaml\n"
   printf "\n"

  YAML_CFG="/etc/hiera.yaml"
  HIERA_DIR=":datadir: "$PUPPET_ROOT"/hieradata"

  sudo echo -e '---'                   | sudo tee     "$YAML_CFG" > /dev/null
  sudo echo -e ':backend:'             | sudo tee  -a "$YAML_CFG" > /dev/null
  sudo echo -e '  - yaml'              | sudo tee  -a "$YAML_CFG" > /dev/null
  sudo echo -e ':hierarchy:'           | sudo tee  -a "$YAML_CFG" > /dev/null
  sudo echo -e '  - "nodes/%{::fqnd}"' | sudo tee  -a "$YAML_CFG" > /dev/null
  sudo echo -e '  - "roles/*"'         | sudo tee  -a "$YAML_CFG" > /dev/null
  sudo echo -e '  - "secrets/*"'       | sudo tee  -a "$YAML_CFG" > /dev/null
  sudo echo -e '  - "globals/*"'       | sudo tee  -a "$YAML_CFG" > /dev/null
  sudo echo -e ':yaml:'                | sudo tee  -a "$YAML_CFG" > /dev/null
  sudo echo -e " "$HIERA_DIR""         | sudo tee  -a "$YAML_CFG" > /dev/null

fi

printf "\n"
read -p "### Press [Enter] key to continue ###"
clear


#############
#

printf "\n" 
printf "Manage node manifest for this server\n"
printf "\n" 

HOSTpp=""$MANIFEST_DIR"/`hostname`.pp"

if [ -e "$HOSTpp" ]
then
   printf "File exists \n"
   printf "\n"
else
  printf "File does not exist. Creating and installing file\n"
  printf "\n"
  printf "Creating File: "$HOSTpp"\n"
  printf "\n"
  printf "node \'$MY_FQDN\' {\n"     > "$HOSTpp"
  printf "   class { \'::ntp\' :\n" >> "$HOSTpp"
printf " servers => [\'0.pool.ntp.org\', \'1.pool.ntp.org\' ] ,\n" >> "$HOSTpp"
  printf "   }\n"                   >> "$HOSTpp"
  printf "   class { \'::cobbler\' :\n" >> "$HOSTpp"
  printf "   }\n"                   >> "$HOSTpp"
  printf "}\n"                      >> "$HOSTpp"
fi

printf "\n"
read -p "### Press [Enter] key to continue ###"
clear

#############
#

printf "\n" 
printf "install public modeles\n"
printf "\n" 

#uninstall chrony and replace it with ntp
sudo systemctl stop chronyd
sudo yum remove chrony
sudo puppet module install --target-dir "$MODULE_DIR" puppetlabs-ntp


printf "\n"
read -p "### Press [Enter] key to continue ###"
clear

############################ EOF ###############################
